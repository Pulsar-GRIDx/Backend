{"numFailedTestSuites":6,"numFailedTests":11,"numPassedTestSuites":4,"numPassedTests":70,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":3,"numTodoTests":0,"numTotalTestSuites":10,"numTotalTests":81,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1722948844937,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1722948853564,"message":"  \u001b[1m‚óè \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22m../../../../../usr/lib/node_modules/jest/node_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n          at Array.map (<anonymous>)\n","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/serviceTests/sytemSettingsServices.test.js","startTime":1722948853564,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["getTokenAmounts"],"duration":45,"failureDetails":[],"failureMessages":[],"fullName":"getTokenAmounts should return correct token amounts for day, month, and year","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return correct token amounts for day, month, and year"},{"ancestorTitles":["getTokenAmounts"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"getTokenAmounts should handle database query errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle database query errors"}],"endTime":1722948847869,"message":"","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/serviceTests/financialService.test.js","startTime":1722948847046,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SystemController - updateVoltageThresholds"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateVoltageThresholds should update voltage thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update voltage thresholds successfully"},{"ancestorTitles":["SystemController - updateVoltageThresholds"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateVoltageThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateVoltageThresholds"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateVoltageThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updateCurrentThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateCurrentThresholds should update current thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update current thresholds successfully"},{"ancestorTitles":["SystemController - updateCurrentThresholds"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateCurrentThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateCurrentThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateCurrentThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updateActivePowerThresholds"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateActivePowerThresholds should update active power thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update active power thresholds successfully"},{"ancestorTitles":["SystemController - updateActivePowerThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateActivePowerThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateActivePowerThresholds"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateActivePowerThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updateReactivePowerThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateReactivePowerThresholds should update reactive power thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update reactive power thresholds successfully"},{"ancestorTitles":["SystemController - updateReactivePowerThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateReactivePowerThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateReactivePowerThresholds"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateReactivePowerThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updateApparentPowerThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateApparentPowerThresholds should update apparent power thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update apparent power thresholds successfully"},{"ancestorTitles":["SystemController - updateApparentPowerThresholds"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateApparentPowerThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateApparentPowerThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateApparentPowerThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updatePowerFactorThresholds"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updatePowerFactorThresholds should update power factor thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update power factor thresholds successfully"},{"ancestorTitles":["SystemController - updatePowerFactorThresholds"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updatePowerFactorThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updatePowerFactorThresholds"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updatePowerFactorThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updateTemperatureThresholds"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateTemperatureThresholds should update temperature thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update temperature thresholds successfully"},{"ancestorTitles":["SystemController - updateTemperatureThresholds"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateTemperatureThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateTemperatureThresholds"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateTemperatureThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"},{"ancestorTitles":["SystemController - updateFrequencyDeviationThresholds"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateFrequencyDeviationThresholds should update frequency deviation thresholds successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update frequency deviation thresholds successfully"},{"ancestorTitles":["SystemController - updateFrequencyDeviationThresholds"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateFrequencyDeviationThresholds should return 400 if any required field is missing","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 if any required field is missing"},{"ancestorTitles":["SystemController - updateFrequencyDeviationThresholds"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SystemController - updateFrequencyDeviationThresholds should return 500 on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 on error"}],"endTime":1722948848765,"message":"","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/systemSettingsContollers.test.js","startTime":1722948845442,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Test energyController"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Test energyController should return total meters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return total meters"},{"ancestorTitles":[],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"should handle errors in getTotalMeters","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle errors in getTotalMeters"},{"ancestorTitles":["getAllActiveAndInactiveMeters controller"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getAllActiveAndInactiveMeters controller should return data when energyService call is successful","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return data when energyService call is successful"},{"ancestorTitles":["getAllActiveAndInactiveMeters controller"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getAllActiveAndInactiveMeters controller should log an error message if there is a database error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log an error message if there is a database error"},{"ancestorTitles":["getTotalTransformers controller"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getTotalTransformers controller should return total number of transformers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return total number of transformers"},{"ancestorTitles":["getTotalTransformers controller"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getTotalTransformers controller should return 400 and error message for no transformers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return 400 and error message for no transformers"},{"ancestorTitles":["getTotalTransformers controller"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getTotalTransformers controller should return a 500 status and an error message when there is an error","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should return a 500 status and an error message when there is an error"},{"ancestorTitles":["total energy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"total energy should return total energy and 200 ok","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return total energy and 200 ok"},{"ancestorTitles":["total energy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"total energy should handle errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle errors"},{"ancestorTitles":["getEnergyStats"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getEnergyStats should return 500 and an error message if an unexpected error occurs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 and an error message if an unexpected error occurs"},{"ancestorTitles":["getEnergyStats"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getEnergyStats should return 200 and the results if no error occurs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 200 and the results if no error occurs"},{"ancestorTitles":["getEnergyStats"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getEnergyStats should handle null results gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle null results gracefully"},{"ancestorTitles":["getEnergyStats"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getEnergyStats should handle empty results gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty results gracefully"},{"ancestorTitles":["getEnergyStats"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getEnergyStats should handle undefined results gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle undefined results gracefully"}],"endTime":1722948849327,"message":"","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/meterControllers.test.js","startTime":1722948848803,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Test meterService"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Test meterService should return total meters from database","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return total meters from database"},{"ancestorTitles":["Test meterService"],"duration":47,"failureDetails":[],"failureMessages":[],"fullName":"Test meterService should handle database query error in getAllTotalMeters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle database query error in getAllTotalMeters"},{"ancestorTitles":["Test meterService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test meterService should return 0 total meters if no result in getAllTotalMeters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 0 total meters if no result in getAllTotalMeters"},{"ancestorTitles":["Test meterService"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test meterService should log an error message if there are no results","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log an error message if there are no results"},{"ancestorTitles":["getAllActiveAndInactiveMeters service"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getAllActiveAndInactiveMeters service should handle database query error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle database query error"},{"ancestorTitles":["getAllActiveAndInactiveMeters service"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getAllActiveAndInactiveMeters service should handle no data found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle no data found"},{"ancestorTitles":["getAllActiveAndInactiveMeters service"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"getAllActiveAndInactiveMeters service should retrieve active and inactive meters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should retrieve active and inactive meters"},{"ancestorTitles":["total transformers"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"total transformers should return total transformers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return total transformers"},{"ancestorTitles":["total transformers"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"total transformers should handle errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors"},{"ancestorTitles":["Total Energy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Total Energy should return total energy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return total energy"},{"ancestorTitles":["Total Energy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Total Energy should handle errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors"}],"endTime":1722948849580,"message":"","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/serviceTests/MterServices.test.js","startTime":1722948849332,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["adminSignup"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"adminSignup should return 400 if required fields are missing or invalid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 400 if required fields are missing or invalid"},{"ancestorTitles":["adminSignup"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"adminSignup should return 409 if Username already exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 409 if Username already exists"},{"ancestorTitles":["adminSignup"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"adminSignup should return 409 if Email already exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 409 if Email already exists"},{"ancestorTitles":["adminSignup"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"adminSignup should return 201 if registration is successful","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 201 if registration is successful"},{"ancestorTitles":["adminSignup"],"duration":162,"failureDetails":[],"failureMessages":[],"fullName":"adminSignup should return 500 if there is an error during registration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 500 if there is an error during registration"},{"ancestorTitles":["getUserProfile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getUserProfile should return 200 status code and an empty user profile when no user profile is found for the provided UserID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 200 status code and an empty user profile when no user profile is found for the provided UserID"},{"ancestorTitles":["getUserProfile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getUserProfile should return 400 status code when UserID is not provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 400 status code when UserID is not provided"},{"ancestorTitles":["getUserProfile"],"duration":3,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:116:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getUserProfile should return 500 status code when there is an error fetching the user profile","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return 500 status code when there is an error fetching the user profile"},{"ancestorTitles":["getUserProfile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getUserProfile should call adminService.getUserProfile with the correct UserID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call adminService.getUserProfile with the correct UserID"},{"ancestorTitles":["getUserProfile"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getUserProfile should return 200 status code and the user profile when a user profile is found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 200 status code and the user profile when a user profile is found"},{"ancestorTitles":["getAllUsers"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getAllUsers should return 200 and a list of users when adminService.getAllUsers resolves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 200 and a list of users when adminService.getAllUsers resolves"},{"ancestorTitles":["getAllUsers"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:166:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getAllUsers should return 500 and an error message when adminService.getAllUsers rejects","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return 500 and an error message when adminService.getAllUsers rejects"},{"ancestorTitles":["getAllUsers"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m3\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m3\u001b[39m\n    at Object.toHaveBeenCalledTimes (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:175:38)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getAllUsers should call adminService.getAllUsers once","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should call adminService.getAllUsers once"},{"ancestorTitles":["getAllUsers"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getAllUsers should handle empty user list correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty user list correctly"},{"ancestorTitles":["getAllUsers"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:193:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getAllUsers should handle unexpected errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle unexpected errors gracefully"},{"ancestorTitles":["resetAdminPassword"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"resetAdminPassword should return 400 if Password is not provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 400 if Password is not provided"},{"ancestorTitles":["resetAdminPassword"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:229:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"resetAdminPassword should return 404 if admin is not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return 404 if admin is not found"},{"ancestorTitles":["resetAdminPassword"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:238:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"resetAdminPassword should return 500 for other errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return 500 for other errors"},{"ancestorTitles":["resetAdminPassword"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"resetAdminPassword should return 200 if password is updated successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 200 if password is updated successfully"},{"ancestorTitles":["resetAdminPassword"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m200\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m200\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js:256:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"resetAdminPassword should handle invalid Admin_ID type","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle invalid Admin_ID type"}],"endTime":1722948850281,"message":"\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetUserProfile ‚Ä∫ should return 500 status code when there is an error fetching the user profile\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 114 |\u001b[39m     \u001b[36mawait\u001b[39m getUserProfile(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Failed to fetch user profile'\u001b[39m\u001b[33m,\u001b[39m details\u001b[33m:\u001b[39m error })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:116:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetAllUsers ‚Ä∫ should return 500 and an error message when adminService.getAllUsers rejects\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 164 |\u001b[39m     \u001b[36mawait\u001b[39m getAllUsers(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 165 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 166 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 167 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Internal server error'\u001b[39m\u001b[33m,\u001b[39m details\u001b[33m:\u001b[39m mockError })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 168 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:166:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetAllUsers ‚Ä∫ should call adminService.getAllUsers once\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m1\u001b[39m\n    Received number of calls: \u001b[31m3\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 173 |\u001b[39m     \u001b[36mawait\u001b[39m getAllUsers(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 174 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 175 |\u001b[39m     expect(adminService\u001b[33m.\u001b[39mgetAllUsers)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 176 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 177 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 178 |\u001b[39m   it(\u001b[32m'should handle empty user list correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:175:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetAllUsers ‚Ä∫ should handle unexpected errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 191 |\u001b[39m     \u001b[36mawait\u001b[39m getAllUsers(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 192 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 193 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 194 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Internal server error'\u001b[39m\u001b[33m,\u001b[39m details\u001b[33m:\u001b[39m unexpectedError })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 195 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 196 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:193:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mresetAdminPassword ‚Ä∫ should return 404 if admin is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m404\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 227 |\u001b[39m     \u001b[36mawait\u001b[39m resetAdminPassword(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 229 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Admin not found'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 232 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:229:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mresetAdminPassword ‚Ä∫ should return 500 for other errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 236 |\u001b[39m     \u001b[36mawait\u001b[39m resetAdminPassword(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 237 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 238 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 239 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Internal server error'\u001b[39m\u001b[33m,\u001b[39m details\u001b[33m:\u001b[39m \u001b[32m'Some internal error'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 240 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 241 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:238:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mresetAdminPassword ‚Ä∫ should handle invalid Admin_ID type\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m400\u001b[39m\n    Received: \u001b[31m200\u001b[39m\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 254 |\u001b[39m     \u001b[36mawait\u001b[39m resetAdminPassword(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 255 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 256 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 257 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Invalid Admin_ID, enter a valid ID'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 258 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/adminAuthContoller.test.js\u001b[39m\u001b[0m\u001b[2m:256:24)\u001b[22m\u001b[2m\u001b[22m\n","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/adminAuthContoller.test.js","startTime":1722948847902,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1722948853564,"message":"  \u001b[1m‚óè \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     ‚Ä¢ If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     ‚Ä¢ If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     ‚Ä¢ To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     ‚Ä¢ If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /home/hiholike/Documents/Pulsar_Development/Backend/routes/meterPercentageCountRoutes.js: Identifier 'executeQuery' has already been declared. (509:9)\n\n    \u001b[0m \u001b[90m 507 |\u001b[39m\n     \u001b[90m 508 |\u001b[39m \u001b[90m// Function to execute SQL queries\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m \u001b[36mfunction\u001b[39m executeQuery(query\u001b[33m,\u001b[39m values) {\n     \u001b[90m     |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 510 |\u001b[39m   \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mPromise\u001b[39m((resolve\u001b[33m,\u001b[39m reject) \u001b[33m=>\u001b[39m {\n     \u001b[90m 511 |\u001b[39m     connection\u001b[33m.\u001b[39mquery(query\u001b[33m,\u001b[39m values\u001b[33m,\u001b[39m (err\u001b[33m,\u001b[39m results) \u001b[33m=>\u001b[39m {\n     \u001b[90m 512 |\u001b[39m       \u001b[36mif\u001b[39m (err) {\u001b[0m\n\n    \u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m request \u001b[33m=\u001b[39m require(\u001b[32m'supertest'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m express \u001b[33m=\u001b[39m require(\u001b[32m'express'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m router \u001b[33m=\u001b[39m require(\u001b[32m'../../routes/meterPercentageCountRoutes'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m connection \u001b[33m=\u001b[39m require(\u001b[32m'../../config/db'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 5 |\u001b[39m \u001b[36mconst\u001b[39m jwt \u001b[33m=\u001b[39m require(\u001b[32m'jsonwebtoken'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 6 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22m../../../../../usr/lib/node_modules/jest/node_modules/@babel/parser/src/parse-error.ts\u001b[2m:78:45)\u001b[22m\n          at parser.next (<anonymous>)\n          at normalizeFile.next (<anonymous>)\n          at run.next (<anonymous>)\n          at transform.next (<anonymous>)\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36mtests/routeTests/meterPercentageCountRoutes.test.js\u001b[39m\u001b[0m\u001b[2m:3:16)\u001b[22m\n","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/routeTests/meterPercentageCountRoutes.test.js","startTime":1722948853564,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["getTokenAmounts"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"getTokenAmounts should return token amounts with status 200","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return token amounts with status 200"},{"ancestorTitles":["getTokenAmounts"],"duration":39,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/financialController.test.js:33:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getTokenAmounts should handle database query errors and return status 500","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle database query errors and return status 500"},{"ancestorTitles":["getTokenAmounts"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"Error querying the database:\"\u001b[39m, \u001b[32m[Error: Database error]\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"Error querying the database:\"\u001b[39m, \u001b[32m[Error: Database error]\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/financialController.test.js:44:27)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getTokenAmounts should log the error when database query fails","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log the error when database query fails"},{"ancestorTitles":["getTokenAmounts"],"duration":4,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m4\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m4\u001b[39m\n    at Object.toHaveBeenCalledTimes (/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/financialController.test.js:52:46)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"getTokenAmounts should call financialService.getTokenAmounts once","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should call financialService.getTokenAmounts once"},{"ancestorTitles":["getTokenAmounts"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"getTokenAmounts should return an empty array if no token amounts are found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return an empty array if no token amounts are found"}],"endTime":1722948851311,"message":"\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetTokenAmounts ‚Ä∫ should handle database query errors and return status 500\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 |\u001b[39m     \u001b[36mawait\u001b[39m getTokenAmounts(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 33 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m     expect(res\u001b[33m.\u001b[39mjson)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ error\u001b[33m:\u001b[39m \u001b[32m'Database query failed'\u001b[39m\u001b[33m,\u001b[39m details\u001b[33m:\u001b[39m mockError })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/financialController.test.js\u001b[39m\u001b[0m\u001b[2m:33:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetTokenAmounts ‚Ä∫ should log the error when database query fails\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"Error querying the database:\"\u001b[39m, \u001b[32m[Error: Database error]\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 |\u001b[39m     \u001b[36mawait\u001b[39m getTokenAmounts(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 44 |\u001b[39m     expect(console\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'Error querying the database:'\u001b[39m\u001b[33m,\u001b[39m mockError)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m   it(\u001b[32m'should call financialService.getTokenAmounts once'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/financialController.test.js\u001b[39m\u001b[0m\u001b[2m:44:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mgetTokenAmounts ‚Ä∫ should call financialService.getTokenAmounts once\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m1\u001b[39m\n    Received number of calls: \u001b[31m4\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 |\u001b[39m     \u001b[36mawait\u001b[39m getTokenAmounts(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 52 |\u001b[39m     expect(financialService\u001b[33m.\u001b[39mgetTokenAmounts)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m   it(\u001b[32m'should return an empty array if no token amounts are found'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/contollerTests/financialController.test.js\u001b[39m\u001b[0m\u001b[2m:52:46)\u001b[22m\u001b[2m\u001b[22m\n","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/contollerTests/financialController.test.js","startTime":1722948850491,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["POST /getSuburbEnergy"],"duration":353,"failureDetails":[{"matcherResult":{"actual":{"error":"An error occurred while querying the database."},"expected":{"suburbsWeekly":{"Suburb1":100},"suburbsMonthly":{"Suburb1":500},"suburbsYearly":{"Suburb1":1200}},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 12\u001b[39m\n\u001b[31m+ Received  +  1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"suburbsMonthly\": Object {\u001b[39m\n\u001b[32m-     \"Suburb1\": 500,\u001b[39m\n\u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"suburbsWeekly\": Object {\u001b[39m\n\u001b[32m-     \"Suburb1\": 100,\u001b[39m\n\u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"suburbsYearly\": Object {\u001b[39m\n\u001b[32m-     \"Suburb1\": 1200,\u001b[39m\n\u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[31m+   \"error\": \"An error occurred while querying the database.\",\u001b[39m\n\u001b[2m  }\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 12\u001b[39m\n\u001b[31m+ Received  +  1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"suburbsMonthly\": Object {\u001b[39m\n\u001b[32m-     \"Suburb1\": 500,\u001b[39m\n\u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"suburbsWeekly\": Object {\u001b[39m\n\u001b[32m-     \"Suburb1\": 100,\u001b[39m\n\u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"suburbsYearly\": Object {\u001b[39m\n\u001b[32m-     \"Suburb1\": 1200,\u001b[39m\n\u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[31m+   \"error\": \"An error occurred while querying the database.\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (/home/hiholike/Documents/Pulsar_Development/Backend/tests/routeTests/energyRoutes.test.js:67:27)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"POST /getSuburbEnergy should respond with the correct structure and status code","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should respond with the correct structure and status code"},{"ancestorTitles":["POST /getSuburbEnergy"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"POST /getSuburbEnergy should respond with 400 if suburbs data is not an array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respond with 400 if suburbs data is not an array"},{"ancestorTitles":["POST /getSuburbEnergy"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"POST /getSuburbEnergy should respond with 500 if database query fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respond with 500 if database query fails"},{"ancestorTitles":["POST /getSuburbEnergy"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"POST /getSuburbEnergy should respond with 401 if no authorization header is provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respond with 401 if no authorization header is provided"},{"ancestorTitles":["POST /getSuburbEnergy"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"POST /getSuburbEnergy should respond with 401 if incorrect authorization header is provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respond with 401 if incorrect authorization header is provided"}],"endTime":1722948852258,"message":"\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mPOST /getSuburbEnergy ‚Ä∫ should respond with the correct structure and status code\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 12\u001b[39m\n    \u001b[31m+ Received  +  1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"suburbsMonthly\": Object {\u001b[39m\n    \u001b[32m-     \"Suburb1\": 500,\u001b[39m\n    \u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"suburbsWeekly\": Object {\u001b[39m\n    \u001b[32m-     \"Suburb1\": 100,\u001b[39m\n    \u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"suburbsYearly\": Object {\u001b[39m\n    \u001b[32m-     \"Suburb1\": 1200,\u001b[39m\n    \u001b[32m-     \"Suburb2\": undefined,\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[31m+   \"error\": \"An error occurred while querying the database.\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 67 |\u001b[39m     expect(response\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m       suburbsWeekly\u001b[33m:\u001b[39m { \u001b[33mSuburb1\u001b[39m\u001b[33m:\u001b[39m mockCacheResult\u001b[33m.\u001b[39mweekly\u001b[33m,\u001b[39m \u001b[33mSuburb2\u001b[39m\u001b[33m:\u001b[39m undefined }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m       suburbsMonthly\u001b[33m:\u001b[39m { \u001b[33mSuburb1\u001b[39m\u001b[33m:\u001b[39m mockCacheResult\u001b[33m.\u001b[39mmonthly\u001b[33m,\u001b[39m \u001b[33mSuburb2\u001b[39m\u001b[33m:\u001b[39m undefined }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m       suburbsYearly\u001b[33m:\u001b[39m { \u001b[33mSuburb1\u001b[39m\u001b[33m:\u001b[39m mockCacheResult\u001b[33m.\u001b[39myearly\u001b[33m,\u001b[39m \u001b[33mSuburb2\u001b[39m\u001b[33m:\u001b[39m undefined }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routeTests/energyRoutes.test.js\u001b[39m\u001b[0m\u001b[2m:67:27)\u001b[22m\u001b[2m\u001b[22m\n","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/routeTests/energyRoutes.test.js","startTime":1722948849587,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1722948853564,"message":"  \u001b[1m‚óè \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     ‚Ä¢ If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     ‚Ä¢ If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     ‚Ä¢ To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     ‚Ä¢ If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /home/hiholike/Documents/Pulsar_Development/Backend/routes/meterPercentageCountRoutes.js: Identifier 'executeQuery' has already been declared. (509:9)\n\n    \u001b[0m \u001b[90m 507 |\u001b[39m\n     \u001b[90m 508 |\u001b[39m \u001b[90m// Function to execute SQL queries\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m \u001b[36mfunction\u001b[39m executeQuery(query\u001b[33m,\u001b[39m values) {\n     \u001b[90m     |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 510 |\u001b[39m   \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mPromise\u001b[39m((resolve\u001b[33m,\u001b[39m reject) \u001b[33m=>\u001b[39m {\n     \u001b[90m 511 |\u001b[39m     connection\u001b[33m.\u001b[39mquery(query\u001b[33m,\u001b[39m values\u001b[33m,\u001b[39m (err\u001b[33m,\u001b[39m results) \u001b[33m=>\u001b[39m {\n     \u001b[90m 512 |\u001b[39m       \u001b[36mif\u001b[39m (err) {\u001b[0m\n\n    \u001b[0m \u001b[90m 41 |\u001b[39m \u001b[90m// Get the routes\u001b[39m\n     \u001b[90m 42 |\u001b[39m \u001b[36mconst\u001b[39m getRoutes \u001b[33m=\u001b[39m require(\u001b[32m'./meter/getSuburbEnergyRoute'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m \u001b[36mconst\u001b[39m meterPercentageRoutes \u001b[33m=\u001b[39m require(\u001b[32m'./routes/meterPercentageCountRoutes'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 44 |\u001b[39m \u001b[36mconst\u001b[39m meterRoutes \u001b[33m=\u001b[39m require(\u001b[32m'./routes/meterRoutes'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 45 |\u001b[39m \u001b[36mconst\u001b[39m suburbEnergyRoute \u001b[33m=\u001b[39m require(\u001b[32m'./meter/getSuburbEnergyRoute'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 46 |\u001b[39m \u001b[36mconst\u001b[39m adminAuthRoutes \u001b[33m=\u001b[39m require(\u001b[32m'./routes/adminAuthRoutes'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22m../../../../../usr/lib/node_modules/jest/node_modules/@babel/parser/src/parse-error.ts\u001b[2m:78:45)\u001b[22m\n          at parser.next (<anonymous>)\n          at normalizeFile.next (<anonymous>)\n          at run.next (<anonymous>)\n          at transform.next (<anonymous>)\n      \u001b[2mat Object.require (\u001b[22mapp.js\u001b[2m:43:31)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36mtests/routeTests/MeterRoutes.test.js\u001b[39m\u001b[0m\u001b[2m:2:13)\u001b[22m\n","name":"/home/hiholike/Documents/Pulsar_Development/Backend/tests/routeTests/MeterRoutes.test.js","startTime":1722948853564,"status":"failed","summary":""}],"wasInterrupted":false}
