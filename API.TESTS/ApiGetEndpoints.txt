# Additional API Endpoints

## Signin HTML Route

- **Route:** `GET /signin`
- **Description:** This route serves an HTML page for user sign-in.

## Signup Route

- **Route:** `GET /signup`
- **Description:** This route provides a welcome message to users accessing the signup page.
- **Request:**
  - Method: GET
- **Response:**
  - Status: 200 OK
  - Content-Type: application/json
  - Body:
    ```json
    {
      "message": "Welcome"
    }
    ```

## Protected Route

- **Route:** `GET /protected`
- **Description:** This route provides a welcome message to authorized users. Authentication is required to access this route.
- **Request:**
  - Method: GET
- **Response:**
  - Status: 200 OK
  - Content-Type: application/json
  - Body:
    ```json
    {
      "message": "Welcome"
    }
    ```

## User Profile Route

- **Route:** `GET /profile/:UserID`
- **Description:** Retrieves the user profile based on the provided UserID.
- **Request:**
  - Method: GET
  - URL Parameter: UserID
- **Response:**
  - Status: 200 OK
  - Content-Type: application/json
  - Body: User profile data including FirstName, Email, RoleName, and IsActive.

- **Error Response:**
  - Status: 401 Unauthorized
  - Content-Type: application/json
  - Body:
    ```json
    {
      "error": "Invalid or expired token"
    }
    ```
  - Status: 401 Unauthorized
  - Content-Type: application/json
  - Body:
    ```json
    {
      "error": "Token verification failed"
    }
    ```
  - Status: 400 Bad Request
  - Content-Type: application/json
  - Body:
    ```json
    {
      "error": "UserId Should Match"
    }
    ```

## Get All Users Route

- **Route:** `GET /allUsers`
- **Description:** Retrieves details of all users from the database.
- **Request:**
  - Method: GET
- **Response:**
  - Status: 200 OK
  - Content-Type: application/json
  - Body: List of users including UserID, FirstName, RoleName, and IsActive.

## Protected Route (Authorization Required)

- **Route:** `GET /protected`
- **Description:** Retrieves a welcome message for the protected route with authorization logic.
- **Request:**
  - Method: GET
  - Headers: Authorization (Bearer token)
- **Response:**
  - Status: 200 OK
  - Content-Type: application/json
  - Body:
    - If AccessLevel is 1 (Admin):
      ```json
      {
        "message": "Welcome, admin"
      }
      ```
    - If AccessLevel is 2 (User):
      ```json
      {
        "message": "Welcome, user"
      }
      ```

- **Error Response:**
  - Status: 401 Unauthorized
  - Content-Type: application/json
  - Body:
    ```json
    {
      "error": "Authentication required"
    }
    ```
  - Status: 401 Unauthorized
  - Content-Type: application/json
  - Body:
    ```json
    {
      "error": "Token verification failed"
    }
    ```

# End of Additional API Endpoints
